{"ast":null,"code":"var _jsxFileName = \"/home/jaaystones1/MindWave/src/pages/StaticModelPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\n// import ReactSlider from \"react-slider\"; // Ensure ReactSlider is imported\nimport { useNavigate } from \"react-router-dom\"; // Import for navigation\nimport \"../css/static-mode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaticModePage = () => {\n  _s();\n  const [frequency, setFrequency] = useState(440); // Default frequency\n  const [tone, setTone] = useState(50); // Default tone value\n  const [isPlaying, setIsPlaying] = useState(false); // Control sound playback\n  const audioContextRef = useRef(null); // Reference for AudioContext\n  const oscillatorRef = useRef(null); // Reference for the oscillator\n\n  const navigate = useNavigate(); // Navigation hook\n\n  // Initialize AudioContext\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    return () => {\n      audioContextRef.current.close();\n    };\n  }, []);\n\n  // Start Sound\n  const startSound = () => {\n    if (!audioContextRef.current || isPlaying) return;\n    oscillatorRef.current = audioContextRef.current.createOscillator();\n    oscillatorRef.current.type = \"sine\"; // Sine wave for smooth sound\n    oscillatorRef.current.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n    const gainNode = audioContextRef.current.createGain();\n    gainNode.gain.setValueAtTime(tone / 100, audioContextRef.current.currentTime); // Adjust volume\n\n    oscillatorRef.current.connect(gainNode).connect(audioContextRef.current.destination);\n    oscillatorRef.current.start();\n    setIsPlaying(true);\n  };\n\n  // Stop Sound\n  const stopSound = () => {\n    if (oscillatorRef.current) {\n      oscillatorRef.current.stop();\n      oscillatorRef.current.disconnect();\n      oscillatorRef.current = null;\n    }\n    setIsPlaying(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"static-mode-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Static Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"frequency\",\n        children: [\"Frequency: \", frequency, \" Hz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"frequency\",\n        min: \"20\",\n        max: \"2000\",\n        value: frequency,\n        onChange: e => setFrequency(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tone\",\n        children: [\"Tone: \", tone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"tone\",\n        min: \"1\",\n        max: \"100\",\n        value: tone,\n        onChange: e => setTone(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSound,\n        disabled: isPlaying,\n        children: \"Start Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSound,\n        disabled: !isPlaying,\n        children: \"Stop Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/sweep-mode\"),\n        className: \"nav-button\",\n        children: \"Go to Sweep Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        className: \"nav-button\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(StaticModePage, \"ZKlwHZwESwqMWkDgEfGBZOm/WfE=\", false, function () {\n  return [useNavigate];\n});\n_c = StaticModePage;\nexport default StaticModePage;\nvar _c;\n$RefreshReg$(_c, \"StaticModePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","StaticModePage","_s","frequency","setFrequency","tone","setTone","isPlaying","setIsPlaying","audioContextRef","oscillatorRef","navigate","current","window","AudioContext","webkitAudioContext","close","startSound","createOscillator","type","setValueAtTime","currentTime","gainNode","createGain","gain","connect","destination","start","stopSound","stop","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","min","max","value","onChange","e","Number","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/jaaystones1/MindWave/src/pages/StaticModelPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n// import ReactSlider from \"react-slider\"; // Ensure ReactSlider is imported\nimport { useNavigate } from \"react-router-dom\"; // Import for navigation\nimport \"../css/static-mode.css\";\n\nconst StaticModePage = () => {\n  const [frequency, setFrequency] = useState(440); // Default frequency\n  const [tone, setTone] = useState(50); // Default tone value\n  const [isPlaying, setIsPlaying] = useState(false); // Control sound playback\n  const audioContextRef = useRef(null); // Reference for AudioContext\n  const oscillatorRef = useRef(null); // Reference for the oscillator\n\n  const navigate = useNavigate(); // Navigation hook\n\n  // Initialize AudioContext\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    return () => {\n      audioContextRef.current.close();\n    };\n  }, []);\n\n  // Start Sound\n  const startSound = () => {\n    if (!audioContextRef.current || isPlaying) return;\n\n    oscillatorRef.current = audioContextRef.current.createOscillator();\n    oscillatorRef.current.type = \"sine\"; // Sine wave for smooth sound\n    oscillatorRef.current.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n\n    const gainNode = audioContextRef.current.createGain();\n    gainNode.gain.setValueAtTime(tone / 100, audioContextRef.current.currentTime); // Adjust volume\n\n    oscillatorRef.current.connect(gainNode).connect(audioContextRef.current.destination);\n    oscillatorRef.current.start();\n    setIsPlaying(true);\n  };\n\n  // Stop Sound\n  const stopSound = () => {\n    if (oscillatorRef.current) {\n      oscillatorRef.current.stop();\n      oscillatorRef.current.disconnect();\n      oscillatorRef.current = null;\n    }\n    setIsPlaying(false);\n  };\n\n  return (\n    <div className=\"static-mode-page\">\n      <h1>Static Mode</h1>\n\n      {/* Frequency Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"frequency\">Frequency: {frequency} Hz</label>\n        <input\n          type=\"range\"\n          id=\"frequency\"\n          min=\"20\"\n          max=\"2000\"\n          value={frequency}\n          onChange={(e) => setFrequency(Number(e.target.value))}\n        />\n      </div>\n\n      {/* Tone Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"tone\">Tone: {tone}</label>\n        <input\n          type=\"range\"\n          id=\"tone\"\n          min=\"1\"\n          max=\"100\"\n          value={tone}\n          onChange={(e) => setTone(Number(e.target.value))}\n        />\n      </div>\n\n      {/* Start and Stop Sound Buttons */}\n      <div className=\"control-buttons\">\n        <button onClick={startSound} disabled={isPlaying}>\n          Start Sound\n        </button>\n        <button onClick={stopSound} disabled={!isPlaying}>\n          Stop Sound\n        </button>\n      </div>\n\n      {/* Navigation Buttons */}\n      <div className=\"navigation-buttons\">\n        <button onClick={() => navigate(\"/sweep-mode\")} className=\"nav-button\">\n          Go to Sweep Mode\n        </button>\n        <button onClick={() => navigate(\"/\")} className=\"nav-button\">\n          Home\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default StaticModePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}