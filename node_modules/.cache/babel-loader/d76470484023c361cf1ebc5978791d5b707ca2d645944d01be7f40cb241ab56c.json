{"ast":null,"code":"var _jsxFileName = \"/home/jaaystones1/MindWave/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BinauralBeats() {\n  _s();\n  const [freqRange, setFreqRange] = useState([10, 30]); // Frequency range\n  const [toneRange, setToneRange] = useState([20, 1500]); // Tone range\n  const [durationMinutes, setDurationMinutes] = useState(\"\");\n  const [intervalSeconds, setIntervalSeconds] = useState(\"\");\n  const [useSlider, setUseSlider] = useState(false); // Toggle between slider and sweep mode\n  const [message, setMessage] = useState(\"\");\n  const [isSweeping, setIsSweeping] = useState(false); // Track if sweep is running\n  const [intervalId, setIntervalId] = useState(null); // Store interval ID for stopping\n  const [audioContext, setAudioContext] = useState(null); // Store audio context for stopping\n\n  const playContinuousBinauralBeats = (startFreq, endFreq, durationMinutes, intervalSeconds) => {\n    const durationSeconds = durationMinutes * 60;\n    const beatFrequency = 10; // Fixed beat frequency\n    const freqStep = (endFreq - startFreq) / (durationSeconds / intervalSeconds);\n    let currentFreq = startFreq;\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(audioCtx); // Store the audio context\n    const leftGain = audioCtx.createGain();\n    const rightGain = audioCtx.createGain();\n    leftGain.connect(audioCtx.destination);\n    rightGain.connect(audioCtx.destination);\n    const leftOscillator = audioCtx.createOscillator();\n    const rightOscillator = audioCtx.createOscillator();\n    leftOscillator.frequency.setValueAtTime(currentFreq + beatFrequency / 2, audioCtx.currentTime);\n    rightOscillator.frequency.setValueAtTime(currentFreq - beatFrequency / 2, audioCtx.currentTime);\n    leftOscillator.connect(leftGain);\n    rightOscillator.connect(rightGain);\n    leftOscillator.start();\n    rightOscillator.start();\n    const id = setInterval(() => {\n      currentFreq += freqStep;\n      if (currentFreq >= endFreq) {\n        leftOscillator.stop();\n        rightOscillator.stop();\n        clearInterval(id);\n        setIsSweeping(false); // Stop the sweep\n        return;\n      }\n      leftOscillator.frequency.setValueAtTime(currentFreq + beatFrequency / 2, audioCtx.currentTime);\n      rightOscillator.frequency.setValueAtTime(currentFreq - beatFrequency / 2, audioCtx.currentTime);\n    }, intervalSeconds * 1000);\n    setIntervalId(id); // Store interval ID for stopping\n  };\n  const startSweep = () => {\n    const [startFreq, endFreq] = freqRange;\n    if (!durationMinutes || !intervalSeconds) {\n      setMessage(\"Please fill in all fields.\");\n      return;\n    }\n    if (startFreq >= endFreq) {\n      setMessage(\"Start frequency must be less than end frequency.\");\n      return;\n    }\n    setMessage(\"Starting frequency sweep...\");\n    setIsSweeping(true); // Indicate sweep is running\n    playContinuousBinauralBeats(startFreq, endFreq, durationMinutes, intervalSeconds);\n    setMessage(\"Frequency sweep completed.\");\n  };\n  const stopSweep = () => {\n    if (audioContext) {\n      audioContext.close(); // Close audio context to stop sound\n    }\n    if (intervalId) {\n      clearInterval(intervalId); // Clear the interval\n    }\n    setIsSweeping(false); // Reset sweeping state\n    setMessage(\"Frequency sweep stopped.\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Binaural Beats Frequency Sweep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-section\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"toggle-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: useSlider,\n            onChange: () => setUseSlider(!useSlider)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), \"Change Mode\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), useSlider ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set Frequencies and Tones for Sweep Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Frequency Range (1Hz - 50Hz):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n            min: 1,\n            max: 50,\n            value: freqRange,\n            onChange: value => setFreqRange(value),\n            className: \"slider\",\n            thumbClassName: \"thumb\",\n            trackClassName: \"track\",\n            pearling: true,\n            minDistance: 1 // Ensures a minimum gap between thumbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [freqRange[0], \" Hz - \", freqRange[1], \" Hz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tone Range (20Hz - 1500Hz):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n            min: 20,\n            max: 1500,\n            value: toneRange,\n            onChange: value => setToneRange(value),\n            className: \"slider\",\n            thumbClassName: \"thumb\",\n            trackClassName: \"track\",\n            pearling: true,\n            minDistance: 10 // Ensures a minimum gap between thumbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [toneRange[0], \" Hz - \", toneRange[1], \" Hz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sweep-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set Frequencies and Tones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Frequency\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n            min: 1,\n            max: 50,\n            value: freqRange[0],\n            onChange: value => setFreqRange([value, freqRange[1]]),\n            className: \"slider\",\n            thumbClassName: \"thumb\",\n            trackClassName: \"track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [freqRange[0], \" Hz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Tone(20Hz - 1500Hz)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ReactSlider, {\n            min: 20,\n            max: 1500,\n            value: toneRange[0],\n            onChange: value => setToneRange([value, toneRange[1]]),\n            className: \"slider\",\n            thumbClassName: \"thumb\",\n            trackClassName: \"track\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [toneRange[0], \" Hz\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Duration (minutes):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: durationMinutes,\n          onChange: e => setDurationMinutes(e.target.value),\n          placeholder: \"Enter duration in minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Interval (seconds):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: intervalSeconds,\n          onChange: e => setIntervalSeconds(e.target.value),\n          placeholder: \"Enter interval in seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"start-btn\",\n        onClick: startSweep,\n        children: \"Start Sweep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), isSweeping && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"stop-btn\",\n        onClick: stopSweep,\n        children: \"Stop Sweep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(BinauralBeats, \"GCN6zbiqAgGkpxPasubM0il16ps=\");\n_c = BinauralBeats;\nexport default BinauralBeats;\nvar _c;\n$RefreshReg$(_c, \"BinauralBeats\");","map":{"version":3,"names":["React","useState","ReactSlider","jsxDEV","_jsxDEV","BinauralBeats","_s","freqRange","setFreqRange","toneRange","setToneRange","durationMinutes","setDurationMinutes","intervalSeconds","setIntervalSeconds","useSlider","setUseSlider","message","setMessage","isSweeping","setIsSweeping","intervalId","setIntervalId","audioContext","setAudioContext","playContinuousBinauralBeats","startFreq","endFreq","durationSeconds","beatFrequency","freqStep","currentFreq","audioCtx","window","AudioContext","webkitAudioContext","leftGain","createGain","rightGain","connect","destination","leftOscillator","createOscillator","rightOscillator","frequency","setValueAtTime","currentTime","start","id","setInterval","stop","clearInterval","startSweep","stopSweep","close","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","min","max","value","thumbClassName","trackClassName","pearling","minDistance","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/jaaystones1/MindWave/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport ReactSlider from \"react-slider\";\nimport \"./App.css\";\n\nfunction BinauralBeats() {\n  const [freqRange, setFreqRange] = useState([10, 30]); // Frequency range\n  const [toneRange, setToneRange] = useState([20, 1500]); // Tone range\n  const [durationMinutes, setDurationMinutes] = useState(\"\");\n  const [intervalSeconds, setIntervalSeconds] = useState(\"\");\n  const [useSlider, setUseSlider] = useState(false); // Toggle between slider and sweep mode\n  const [message, setMessage] = useState(\"\");\n  const [isSweeping, setIsSweeping] = useState(false); // Track if sweep is running\n  const [intervalId, setIntervalId] = useState(null); // Store interval ID for stopping\n  const [audioContext, setAudioContext] = useState(null); // Store audio context for stopping\n\n  const playContinuousBinauralBeats = (startFreq, endFreq, durationMinutes, intervalSeconds) => {\n    const durationSeconds = durationMinutes * 60;\n    const beatFrequency = 10; // Fixed beat frequency\n    const freqStep = (endFreq - startFreq) / (durationSeconds / intervalSeconds);\n\n    let currentFreq = startFreq;\n\n    const audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    setAudioContext(audioCtx); // Store the audio context\n    const leftGain = audioCtx.createGain();\n    const rightGain = audioCtx.createGain();\n    leftGain.connect(audioCtx.destination);\n    rightGain.connect(audioCtx.destination);\n\n    const leftOscillator = audioCtx.createOscillator();\n    const rightOscillator = audioCtx.createOscillator();\n\n    leftOscillator.frequency.setValueAtTime(currentFreq + beatFrequency / 2, audioCtx.currentTime);\n    rightOscillator.frequency.setValueAtTime(currentFreq - beatFrequency / 2, audioCtx.currentTime);\n\n    leftOscillator.connect(leftGain);\n    rightOscillator.connect(rightGain);\n\n    leftOscillator.start();\n    rightOscillator.start();\n\n    const id = setInterval(() => {\n      currentFreq += freqStep;\n\n      if (currentFreq >= endFreq) {\n        leftOscillator.stop();\n        rightOscillator.stop();\n        clearInterval(id);\n        setIsSweeping(false); // Stop the sweep\n        return;\n      }\n\n      leftOscillator.frequency.setValueAtTime(currentFreq + beatFrequency / 2, audioCtx.currentTime);\n      rightOscillator.frequency.setValueAtTime(currentFreq - beatFrequency / 2, audioCtx.currentTime);\n    }, intervalSeconds * 1000);\n\n    setIntervalId(id); // Store interval ID for stopping\n  };\n\n  const startSweep = () => {\n    const [startFreq, endFreq] = freqRange;\n    if (!durationMinutes || !intervalSeconds) {\n      setMessage(\"Please fill in all fields.\");\n      return;\n    }\n\n    if (startFreq >= endFreq) {\n      setMessage(\"Start frequency must be less than end frequency.\");\n      return;\n    }\n\n    setMessage(\"Starting frequency sweep...\");\n    setIsSweeping(true); // Indicate sweep is running\n    playContinuousBinauralBeats(startFreq, endFreq, durationMinutes, intervalSeconds);\n    setMessage(\"Frequency sweep completed.\");\n  };\n\n  const stopSweep = () => {\n    if (audioContext) {\n      audioContext.close(); // Close audio context to stop sound\n    }\n    if (intervalId) {\n      clearInterval(intervalId); // Clear the interval\n    }\n    setIsSweeping(false); // Reset sweeping state\n    setMessage(\"Frequency sweep stopped.\");\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>Binaural Beats Frequency Sweep</h1>\n      </header>\n      <main className=\"app-main\">\n        <div className=\"toggle-section\">\n          <label className=\"toggle-label\">\n            <input\n              type=\"checkbox\"\n              checked={useSlider}\n              onChange={() => setUseSlider(!useSlider)}\n            />\n            Change Mode\n          </label>\n        </div>\n\n        {useSlider ? (\n          <div className=\"slider-section\">\n            <h2>Set Frequencies and Tones for Sweep Mode</h2>\n            <div className=\"form-group\">\n              <label>Frequency Range (1Hz - 50Hz):</label>\n              <ReactSlider\n                min={1}\n                max={50}\n                value={freqRange}\n                onChange={(value) => setFreqRange(value)}\n                className=\"slider\"\n                thumbClassName=\"thumb\"\n                trackClassName=\"track\"\n                pearling\n                minDistance={1} // Ensures a minimum gap between thumbs\n              />\n              <p>{freqRange[0]} Hz - {freqRange[1]} Hz</p>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Tone Range (20Hz - 1500Hz):</label>\n              <ReactSlider\n                min={20}\n                max={1500}\n                value={toneRange}\n                onChange={(value) => setToneRange(value)}\n                className=\"slider\"\n                thumbClassName=\"thumb\"\n                trackClassName=\"track\"\n                pearling\n                minDistance={10} // Ensures a minimum gap between thumbs\n              />\n              <p>{toneRange[0]} Hz - {toneRange[1]} Hz</p>\n            </div>\n          </div>\n        ) : (\n          <div className=\"sweep-section\">\n            <h2>Set Frequencies and Tones</h2>\n            <div className=\"form-group\">\n              <label>Frequency</label>\n              <ReactSlider\n                min={1}\n                max={50}\n                value={freqRange[0]}\n                onChange={(value) => setFreqRange([value, freqRange[1]])}\n                className=\"slider\"\n                thumbClassName=\"thumb\"\n                trackClassName=\"track\"\n              />\n              <p>{freqRange[0]} Hz</p>\n            </div>\n\n            <div className=\"form-group\">\n              <label>Tone(20Hz - 1500Hz)</label>\n              <ReactSlider\n                min={20}\n                max={1500}\n                value={toneRange[0]}\n                onChange={(value) => setToneRange([value, toneRange[1]])}\n                className=\"slider\"\n                thumbClassName=\"thumb\"\n                trackClassName=\"track\"\n              />\n              <p>{toneRange[0]} Hz</p>\n            </div>\n\n          </div>\n        )}\n\n        <div className=\"form-group\">\n          <label>Duration (minutes):</label>\n          <input\n            type=\"number\"\n            value={durationMinutes}\n            onChange={(e) => setDurationMinutes(e.target.value)}\n            placeholder=\"Enter duration in minutes\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Interval (seconds):</label>\n          <input\n            type=\"number\"\n            value={intervalSeconds}\n            onChange={(e) => setIntervalSeconds(e.target.value)}\n            placeholder=\"Enter interval in seconds\"\n          />\n        </div>\n        <button className=\"start-btn\" onClick={startSweep}>\n          Start Sweep\n        </button>\n        {isSweeping && (\n          <button className=\"stop-btn\" onClick={stopSweep}>\n          Stop Sweep\n          </button>\n        )}\n        <p>{message}</p>\n      </main>\n    </div>\n  );\n}\n\nexport default BinauralBeats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}