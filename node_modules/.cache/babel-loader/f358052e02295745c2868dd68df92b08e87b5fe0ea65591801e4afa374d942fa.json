{"ast":null,"code":"var _jsxFileName = \"/home/jaaystones1/MindWave/src/pages/SweepModelPage.js\",\n  _s = $RefreshSig$();\n// src/pages/SweepModePage.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/sweep\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SweepModePage = () => {\n  _s();\n  const [frequencyRange, setFrequencyRange] = useState([20, 2000]); // Default frequency range\n  const [currentFrequency, setCurrentFrequency] = useState(20); // Initial frequency\n  const [tone, setTone] = useState(50); // Default tone value\n  const [isSweeping, setIsSweeping] = useState(false); // Control sweep state\n\n  // Sweep functionality\n  useEffect(() => {\n    if (!isSweeping) return;\n    const interval = setInterval(() => {\n      setCurrentFrequency(prevFrequency => {\n        if (prevFrequency < frequencyRange[1]) {\n          return prevFrequency + 1; // Increment frequency\n        } else {\n          return frequencyRange[0]; // Reset to start of range\n        }\n      });\n    }, 50); // Adjust interval speed as needed\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount or stop\n  }, [isSweeping, frequencyRange]);\n\n  // Start Sweep\n  const startSweep = () => {\n    setCurrentFrequency(frequencyRange[0]);\n    setIsSweeping(true);\n  };\n\n  // Stop Sweep\n  const stopSweep = () => {\n    setIsSweeping(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweep-mode-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sweep Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"frequencyRange\",\n        children: [\"Frequency Range: \", frequencyRange[0], \" Hz - \", frequencyRange[1], \" Hz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"frequencyRange\",\n        min: \"20\",\n        max: \"20000\",\n        step: \"1\",\n        value: frequencyRange,\n        onChange: e => {\n          const value = Number(e.target.value);\n          const [min, max] = frequencyRange;\n          if (value < max) {\n            setFrequencyRange([value, max]); // Adjust min\n          } else {\n            setFrequencyRange([min, value]); // Adjust max\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Frequency: \", currentFrequency, \" Hz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSweep,\n        disabled: isSweeping,\n        children: \"Start Sweep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSweep,\n        disabled: !isSweeping,\n        children: \"Stop Sweep\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tone\",\n        children: [\"Tone: \", tone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"tone\",\n        min: \"1\",\n        max: \"100\",\n        value: tone,\n        onChange: e => setTone(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(SweepModePage, \"eLqKmJ7VxmVxxSpPN5RuJnTrIzk=\");\n_c = SweepModePage;\nexport default SweepModePage;\nvar _c;\n$RefreshReg$(_c, \"SweepModePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SweepModePage","_s","frequencyRange","setFrequencyRange","currentFrequency","setCurrentFrequency","tone","setTone","isSweeping","setIsSweeping","interval","setInterval","prevFrequency","clearInterval","startSweep","stopSweep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","min","max","step","value","onChange","e","Number","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/jaaystones1/MindWave/src/pages/SweepModelPage.js"],"sourcesContent":["// src/pages/SweepModePage.js\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/sweep\";\n\nconst SweepModePage = () => {\n  const [frequencyRange, setFrequencyRange] = useState([20, 2000]); // Default frequency range\n  const [currentFrequency, setCurrentFrequency] = useState(20); // Initial frequency\n  const [tone, setTone] = useState(50); // Default tone value\n  const [isSweeping, setIsSweeping] = useState(false); // Control sweep state\n\n  // Sweep functionality\n  useEffect(() => {\n    if (!isSweeping) return;\n\n    const interval = setInterval(() => {\n      setCurrentFrequency((prevFrequency) => {\n        if (prevFrequency < frequencyRange[1]) {\n          return prevFrequency + 1; // Increment frequency\n        } else {\n          return frequencyRange[0]; // Reset to start of range\n        }\n      });\n    }, 50); // Adjust interval speed as needed\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount or stop\n  }, [isSweeping, frequencyRange]);\n\n  // Start Sweep\n  const startSweep = () => {\n    setCurrentFrequency(frequencyRange[0]);\n    setIsSweeping(true);\n  };\n\n  // Stop Sweep\n  const stopSweep = () => {\n    setIsSweeping(false);\n  };\n\n  return (\n    <div className=\"sweep-mode-page\">\n      <h1>Sweep Mode</h1>\n\n      {/* Frequency Range Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"frequencyRange\">\n          Frequency Range: {frequencyRange[0]} Hz - {frequencyRange[1]} Hz\n        </label>\n        <input\n          type=\"range\"\n          id=\"frequencyRange\"\n          min=\"20\"\n          max=\"20000\"\n          step=\"1\"\n          value={frequencyRange}\n          onChange={(e) => {\n            const value = Number(e.target.value);\n            const [min, max] = frequencyRange;\n\n            if (value < max) {\n              setFrequencyRange([value, max]); // Adjust min\n            } else {\n              setFrequencyRange([min, value]); // Adjust max\n            }\n          }}\n        />\n      </div>\n\n      {/* Current Frequency Display */}\n      <p>Current Frequency: {currentFrequency} Hz</p>\n\n      {/* Start and Stop Sweep Buttons */}\n      <div className=\"control-buttons\">\n        <button onClick={startSweep} disabled={isSweeping}>\n          Start Sweep\n        </button>\n        <button onClick={stopSweep} disabled={!isSweeping}>\n          Stop Sweep\n        </button>\n      </div>\n\n      {/* Tone Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"tone\">Tone: {tone}</label>\n        <input\n          type=\"range\"\n          id=\"tone\"\n          min=\"1\"\n          max=\"100\"\n          value={tone}\n          onChange={(e) => setTone(Number(e.target.value))}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SweepModePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}