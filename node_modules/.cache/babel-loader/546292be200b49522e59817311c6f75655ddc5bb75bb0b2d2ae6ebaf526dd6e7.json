{"ast":null,"code":"var _jsxFileName = \"/home/jaaystones1/MindWave/src/pages/StaticModelPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/static-mode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaticModePage = () => {\n  _s();\n  const [frequency, setFrequency] = useState(440); // Default frequency\n  const [tone, setTone] = useState(50); // Default tone value\n  const [isPlaying, setIsPlaying] = useState(false); // Control sound playback\n  const audioContextRef = useRef(null); // Reference for AudioContext\n  const oscillatorRef = useRef(null); // Reference for the oscillator\n  const gainNodeRef = useRef(null); // Reference for the GainNode\n\n  const navigate = useNavigate(); // Navigation hook\n\n  // Initialize AudioContext\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    return () => {\n      audioContextRef.current.close();\n    };\n  }, []);\n\n  // Start Sound\n  const startSound = () => {\n    if (!audioContextRef.current || isPlaying) return;\n    oscillatorRef.current = audioContextRef.current.createOscillator();\n    gainNodeRef.current = audioContextRef.current.createGain();\n    oscillatorRef.current.type = \"sine\"; // Sine wave for smooth sound\n    oscillatorRef.current.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n    gainNodeRef.current.gain.setValueAtTime(tone / 100, audioContextRef.current.currentTime); // Adjust volume\n\n    oscillatorRef.current.connect(gainNodeRef.current).connect(audioContextRef.current.destination);\n    oscillatorRef.current.start();\n    setIsPlaying(true);\n  };\n\n  // Stop Sound\n  const stopSound = () => {\n    if (oscillatorRef.current) {\n      oscillatorRef.current.stop();\n      oscillatorRef.current.disconnect();\n      oscillatorRef.current = null;\n    }\n    if (gainNodeRef.current) {\n      gainNodeRef.current.disconnect();\n      gainNodeRef.current = null;\n    }\n    setIsPlaying(false);\n  };\n\n  // Update Frequency in Real Time\n  const handleFrequencyChange = newFrequency => {\n    setFrequency(newFrequency);\n    if (oscillatorRef.current) {\n      oscillatorRef.current.frequency.setValueAtTime(newFrequency, audioContextRef.current.currentTime);\n    }\n  };\n\n  // Update Tone (Volume) in Real Time\n  const handleToneChange = newTone => {\n    setTone(newTone);\n    if (gainNodeRef.current) {\n      gainNodeRef.current.gain.setValueAtTime(newTone / 100, audioContextRef.current.currentTime);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"static-mode-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Static Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"frequency\",\n        children: [\"Frequency: \", frequency, \" Hz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"frequency\",\n        min: \"1\",\n        max: \"50\",\n        value: frequency,\n        onChange: e => handleFrequencyChange(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tone\",\n        children: [\"Tone: \", tone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"tone\",\n        min: \"20\",\n        max: \"100\",\n        value: tone,\n        onChange: e => handleToneChange(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startSound,\n        disabled: isPlaying,\n        children: \"Start Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopSound,\n        disabled: !isPlaying,\n        children: \"Stop Sound\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/sweep-mode\"),\n        className: \"nav-button\",\n        children: \"Go to Sweep Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/\"),\n        className: \"nav-button\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(StaticModePage, \"x1E7kDFlRU4aL3DQjiwUnQxMkuU=\", false, function () {\n  return [useNavigate];\n});\n_c = StaticModePage;\nexport default StaticModePage;\nvar _c;\n$RefreshReg$(_c, \"StaticModePage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","jsxDEV","_jsxDEV","StaticModePage","_s","frequency","setFrequency","tone","setTone","isPlaying","setIsPlaying","audioContextRef","oscillatorRef","gainNodeRef","navigate","current","window","AudioContext","webkitAudioContext","close","startSound","createOscillator","createGain","type","setValueAtTime","currentTime","gain","connect","destination","start","stopSound","stop","disconnect","handleFrequencyChange","newFrequency","handleToneChange","newTone","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","min","max","value","onChange","e","Number","target","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/jaaystones1/MindWave/src/pages/StaticModelPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../css/static-mode.css\";\n\nconst StaticModePage = () => {\n  const [frequency, setFrequency] = useState(440); // Default frequency\n  const [tone, setTone] = useState(50); // Default tone value\n  const [isPlaying, setIsPlaying] = useState(false); // Control sound playback\n  const audioContextRef = useRef(null); // Reference for AudioContext\n  const oscillatorRef = useRef(null); // Reference for the oscillator\n  const gainNodeRef = useRef(null); // Reference for the GainNode\n\n  const navigate = useNavigate(); // Navigation hook\n\n  // Initialize AudioContext\n  useEffect(() => {\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n    return () => {\n      audioContextRef.current.close();\n    };\n  }, []);\n\n  // Start Sound\n  const startSound = () => {\n    if (!audioContextRef.current || isPlaying) return;\n\n    oscillatorRef.current = audioContextRef.current.createOscillator();\n    gainNodeRef.current = audioContextRef.current.createGain();\n\n    oscillatorRef.current.type = \"sine\"; // Sine wave for smooth sound\n    oscillatorRef.current.frequency.setValueAtTime(frequency, audioContextRef.current.currentTime);\n    gainNodeRef.current.gain.setValueAtTime(tone / 100, audioContextRef.current.currentTime); // Adjust volume\n\n    oscillatorRef.current.connect(gainNodeRef.current).connect(audioContextRef.current.destination);\n    oscillatorRef.current.start();\n    setIsPlaying(true);\n  };\n\n  // Stop Sound\n  const stopSound = () => {\n    if (oscillatorRef.current) {\n      oscillatorRef.current.stop();\n      oscillatorRef.current.disconnect();\n      oscillatorRef.current = null;\n    }\n    if (gainNodeRef.current) {\n      gainNodeRef.current.disconnect();\n      gainNodeRef.current = null;\n    }\n    setIsPlaying(false);\n  };\n\n  // Update Frequency in Real Time\n  const handleFrequencyChange = (newFrequency) => {\n    setFrequency(newFrequency);\n    if (oscillatorRef.current) {\n      oscillatorRef.current.frequency.setValueAtTime(\n        newFrequency,\n        audioContextRef.current.currentTime\n      );\n    }\n  };\n\n  // Update Tone (Volume) in Real Time\n  const handleToneChange = (newTone) => {\n    setTone(newTone);\n    if (gainNodeRef.current) {\n      gainNodeRef.current.gain.setValueAtTime(\n        newTone / 100,\n        audioContextRef.current.currentTime\n      );\n    }\n  };\n\n  return (\n    <div className=\"static-mode-page\">\n      <h1>Static Mode</h1>\n\n      {/* Frequency Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"frequency\">Frequency: {frequency} Hz</label>\n        <input\n          type=\"range\"\n          id=\"frequency\"\n          min=\"1\"\n          max=\"50\"\n          value={frequency}\n          onChange={(e) => handleFrequencyChange(Number(e.target.value))}\n        />\n      </div>\n\n      {/* Tone Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"tone\">Tone: {tone}</label>\n        <input\n          type=\"range\"\n          id=\"tone\"\n          min=\"20\"\n          max=\"100\"\n          value={tone}\n          onChange={(e) => handleToneChange(Number(e.target.value))}\n        />\n      </div>\n\n      {/* Start and Stop Sound Buttons */}\n      <div className=\"control-buttons\">\n        <button onClick={startSound} disabled={isPlaying}>\n          Start Sound\n        </button>\n        <button onClick={stopSound} disabled={!isPlaying}>\n          Stop Sound\n        </button>\n      </div>\n\n      {/* Navigation Buttons */}\n      <div className=\"navigation-buttons\">\n        <button onClick={() => navigate(\"/sweep-mode\")} className=\"nav-button\">\n          Go to Sweep Mode\n        </button>\n        <button onClick={() => navigate(\"/\")} className=\"nav-button\">\n          Home\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default StaticModePage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}