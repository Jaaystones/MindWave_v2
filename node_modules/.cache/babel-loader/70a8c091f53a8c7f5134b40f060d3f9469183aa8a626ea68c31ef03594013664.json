{"ast":null,"code":"var _jsxFileName = \"/home/jaaystones1/MindWave/src/pages/SweepModelPage.js\",\n  _s = $RefreshSig$();\n// src/pages/SweepModePage.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./css/sweep-mode.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SweepModePage = () => {\n  _s();\n  const [frequencyRange, setFrequencyRange] = useState([20, 2000]); // Default frequency range\n  const [currentFrequency, setCurrentFrequency] = useState(20); // Initial frequency\n  const [tone, setTone] = useState(50); // Default tone value\n\n  // Update frequency dynamically within the selected range\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentFrequency(prevFrequency => {\n        if (prevFrequency < frequencyRange[1]) {\n          return prevFrequency + 1; // Increment frequency\n        } else {\n          return frequencyRange[0]; // Reset to start of range\n        }\n      });\n    }, 50); // Adjust interval speed as needed\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, [frequencyRange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sweep-mode-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Sweep Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"frequencyRange\",\n        children: [\"Frequency Range: \", frequencyRange[0], \" Hz - \", frequencyRange[1], \" Hz\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"frequencyRangeMin\",\n        min: \"1\",\n        max: \"50\",\n        value: frequencyRange[0],\n        onChange: e => setFrequencyRange([Number(e.target.value), frequencyRange[1]])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"frequencyRangeMax\",\n        min: \"1\",\n        max: \"50\",\n        value: frequencyRange[1],\n        onChange: e => setFrequencyRange([frequencyRange[0], Number(e.target.value)])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current Frequency: \", currentFrequency, \" Hz\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tone\",\n        children: [\"Tone: \", tone]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"tone\",\n        min: \"1\",\n        max: \"100\",\n        value: tone,\n        onChange: e => setTone(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SweepModePage, \"R0odGNhBK3sR74BuWTGS0Co7XaY=\");\n_c = SweepModePage;\nexport default SweepModePage;\nvar _c;\n$RefreshReg$(_c, \"SweepModePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SweepModePage","_s","frequencyRange","setFrequencyRange","currentFrequency","setCurrentFrequency","tone","setTone","interval","setInterval","prevFrequency","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","min","max","value","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/home/jaaystones1/MindWave/src/pages/SweepModelPage.js"],"sourcesContent":["// src/pages/SweepModePage.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./css/sweep-mode.css\";\n\nconst SweepModePage = () => {\n  const [frequencyRange, setFrequencyRange] = useState([20, 2000]); // Default frequency range\n  const [currentFrequency, setCurrentFrequency] = useState(20); // Initial frequency\n  const [tone, setTone] = useState(50); // Default tone value\n\n  // Update frequency dynamically within the selected range\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentFrequency((prevFrequency) => {\n        if (prevFrequency < frequencyRange[1]) {\n          return prevFrequency + 1; // Increment frequency\n        } else {\n          return frequencyRange[0]; // Reset to start of range\n        }\n      });\n    }, 50); // Adjust interval speed as needed\n\n    return () => clearInterval(interval); // Cleanup interval on component unmount\n  }, [frequencyRange]);\n\n  return (\n    <div className=\"sweep-mode-page\">\n      <h1>Sweep Mode</h1>\n\n      {/* Frequency Range Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"frequencyRange\">Frequency Range: {frequencyRange[0]} Hz - {frequencyRange[1]} Hz</label>\n        <input\n          type=\"range\"\n          id=\"frequencyRangeMin\"\n          min=\"1\"\n          max=\"50\"\n          value={frequencyRange[0]}\n          onChange={(e) =>\n            setFrequencyRange([Number(e.target.value), frequencyRange[1]])\n          }\n        />\n        <input\n          type=\"range\"\n          id=\"frequencyRangeMax\"\n          min=\"1\"\n          max=\"50\"\n          value={frequencyRange[1]}\n          onChange={(e) =>\n            setFrequencyRange([frequencyRange[0], Number(e.target.value)])\n          }\n        />\n      </div>\n\n      {/* Current Frequency Display */}\n      <p>Current Frequency: {currentFrequency} Hz</p>\n\n      {/* Tone Slider */}\n      <div className=\"slider-container\">\n        <label htmlFor=\"tone\">Tone: {tone}</label>\n        <input\n          type=\"range\"\n          id=\"tone\"\n          min=\"1\"\n          max=\"100\"\n          value={tone}\n          onChange={(e) => setTone(Number(e.target.value))}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default SweepModePage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAClE,MAAM,CAACQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjCJ,mBAAmB,CAAEK,aAAa,IAAK;QACrC,IAAIA,aAAa,GAAGR,cAAc,CAAC,CAAC,CAAC,EAAE;UACrC,OAAOQ,aAAa,GAAG,CAAC,CAAC,CAAC;QAC5B,CAAC,MAAM;UACL,OAAOR,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5B;MACF,CAAC,CAAC;IACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;IAER,OAAO,MAAMS,aAAa,CAACH,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,CAACN,cAAc,CAAC,CAAC;EAEpB,oBACEH,OAAA;IAAKa,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9Bd,OAAA;MAAAc,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnBlB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bd,OAAA;QAAOmB,OAAO,EAAC,gBAAgB;QAAAL,QAAA,GAAC,mBAAiB,EAACX,cAAc,CAAC,CAAC,CAAC,EAAC,QAAM,EAACA,cAAc,CAAC,CAAC,CAAC,EAAC,KAAG;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxGlB,OAAA;QACEoB,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,mBAAmB;QACtBC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,IAAI;QACRC,KAAK,EAAErB,cAAc,CAAC,CAAC,CAAE;QACzBsB,QAAQ,EAAGC,CAAC,IACVtB,iBAAiB,CAAC,CAACuB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,EAAErB,cAAc,CAAC,CAAC,CAAC,CAAC;MAC9D;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACFlB,OAAA;QACEoB,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,mBAAmB;QACtBC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,IAAI;QACRC,KAAK,EAAErB,cAAc,CAAC,CAAC,CAAE;QACzBsB,QAAQ,EAAGC,CAAC,IACVtB,iBAAiB,CAAC,CAACD,cAAc,CAAC,CAAC,CAAC,EAAEwB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC,CAAC;MAC9D;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNlB,OAAA;MAAAc,QAAA,GAAG,qBAAmB,EAACT,gBAAgB,EAAC,KAAG;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAG/ClB,OAAA;MAAKa,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/Bd,OAAA;QAAOmB,OAAO,EAAC,MAAM;QAAAL,QAAA,GAAC,QAAM,EAACP,IAAI;MAAA;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1ClB,OAAA;QACEoB,IAAI,EAAC,OAAO;QACZC,EAAE,EAAC,MAAM;QACTC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,KAAK;QACTC,KAAK,EAAEjB,IAAK;QACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACmB,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK,CAAC;MAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlEID,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAoEnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}